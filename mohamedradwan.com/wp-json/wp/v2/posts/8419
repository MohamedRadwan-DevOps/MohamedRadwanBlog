{"id":8419,"date":"2018-04-17T11:39:27","date_gmt":"2018-04-17T11:39:27","guid":{"rendered":"https:\/\/mohamedradwan.com\/?p=8419"},"modified":"2019-07-10T09:48:21","modified_gmt":"2019-07-10T09:48:21","slug":"containers-the-perfect-solution-for-running-microservices","status":"publish","type":"post","link":"https:\/\/mohamedradwan.com\/2018\/04\/17\/containers-the-perfect-solution-for-running-microservices\/","title":{"rendered":"Containers &#8211; The Perfect Solution For Running Microservices"},"content":{"rendered":"<p>&nbsp;<\/p>\n<p><a href=\"#_Toc511735169\">Introduction<\/a><\/p>\n<p><a href=\"#_Toc511735170\">Containers Introduction and abstract\u00a0<\/a><\/p>\n<p><a href=\"#_Toc511735171\">1- Microservices and Containers what and why?<\/a><\/p>\n<p><a href=\"#_Toc511735172\">2- Creating Linux VM on Azure and establish a remote connection<\/a><\/p>\n<p><a href=\"#_Toc511735173\">3- Working with Docker on Linux<\/a><\/p>\n<p><a href=\"#_Toc511735174\">4- Creating Windows VM on Azure and working with Docker<\/a><\/p>\n<h2><\/h2>\n<h2><a name=\"_Toc511735169\"><\/a>Introduction<\/h2>\n<p>A container image is a lightweight executable package of a piece of software that will always run the same, regardless of the environment you are using it with. The series of videos presented below will explain the basic and advanced principles of using Containers, as well as various technologies and services around it.<\/p>\n<p>&nbsp;<\/p>\n<p class=\"blue\"><span class=\"ion-tip\">Tip<\/span> If you would like to learn more about enhancing Frontend development code quality, it includes understanding different types of JavaScript unit testing frameworks like Jasmine, Mocha, Jest, different types of task runner like Grunt and Gulp, different types of linting tools, like JSHint, ESLint, JSLint, CSSLint, different types of code formatter like Prettier and Tidy, how to write your first JavaScript using test with Jasmine standalone version, how to run JavaScript unit tests using Grunt.<\/p>\n<p class=\"blue\">Command Line and PhantomJS, how to calculate code coverage for JavaScript unit tests using Istanbul, how to run JavaScript unit tests using Visual Studio Test Explorer using chutzpah extension, how to linting JavaScript code using JSHint and how to run that from Command Line using Grunt, finally it shows how to integrate all the quality practices with Visual Studio Team Service Build automation so it can be part of CI\/CD or Continuous Integration and Continuous Delivery, &#8211; have a look at the <a href=\"https:\/\/mohamedradwan.com\/2018\/04\/04\/front-end-code-quality-javascript-unit-test-and-linting-automation-with-vsts-build\/\"><strong>this post<\/strong><\/a><\/p>\n<p>&nbsp;<\/p>\n<h2><a name=\"_Toc511735170\"><\/a>Containers Introduction and abstract<\/h2>\n<p>In this video series, we will understand what is the story behind containers and what drives or the needs for it, we will know why companies moved from traditional solution architecture to Microservices and how this put containers as the perfect solution for running them, we will get quick intro to clear some definitions, tools and keywords related to this ecosystem, for example.<\/p>\n<p>We will understand what is the different between VM, Container and Hyper-V Container,\u00a0 Why we would prefer container over VM and when the VM is better, It will understand the different between container and image and know the life cycle of creating a new image and why I do that, like adding more layers to the base image, push that to container images registry on the cloud. Then pull that from the registry to anywhere to have a new container. And it will understand also different technologies and services around container, like Docker, Docker Swarm, Kubernetes, Azure Container Services (ACS), Azure Container Registry, etc.<\/p>\n<p>We will see how to create Linux machine on Azure, remote connect to it using Git bash and PuTTY, how to install Docker, display all the images that exist on the machine, pull new image from Docker Hub, run and stop a container, display running containers and many others, we will see also the same steps on Windows with Docker.<\/p>\n<p>&nbsp;<\/p>\n<div style=\"text-algn:left\"><span style=\"display:inline-block;text-align:center;\"><iframe allow=\"autoplay\" class=\"youtube_embed_iframe\"    allowFullScreen=\"true\" style=\"width:640px; height:385px\" src=\"https:\/\/www.youtube.com\/embed\/X13AdWYC2KI?autoplay=0&theme=dark&loop=0&fs=1&showinfo=1&modestbranding=0&iv_load_policy=1&color=red&autohide=1&disablekb=0&enablejsapi=1&version=3\"><\/iframe><\/span><\/div>\n<p>&nbsp;<\/p>\n<h2><a name=\"_Toc511735171\"><\/a>1- Microservices and Containers what and why?<\/h2>\n<p>This is the first video in this series. we will understand what is the story behind containers and what drives or the needs it. We will know why companies moved from traditional solution architecture to Microservices and how this put containers as the perfect solution for running them. We will get quick intro to clear some definitions, tools and keywords related to this ecosystem. For example. We will understand what is the different between VM, Container and Hyper-V Container.<\/p>\n<p>Why we would prefer container over VM and when the VM is better, we will understand the different between container and image and know the life cycle of creating a new image and why I do that, like adding more layers to the base image, push that to container images registry on the cloud, then pull that from the registry to anywhere to have a new container. We will understand how the orchestration and clustering work for containers by managing the underline nodes which host the containers. We will understand also different technologies and services around container, like Docker, Docker Hub, Docker Swarm, Kubernetes, Azure Container Services (AKS), Azure Container Registry.<\/p>\n<p>&nbsp;<\/p>\n<div style=\"text-algn:left\"><span style=\"display:inline-block;text-align:center;\"><iframe allow=\"autoplay\" class=\"youtube_embed_iframe\"    allowFullScreen=\"true\" style=\"width:640px; height:385px\" src=\"https:\/\/www.youtube.com\/embed\/18i94MfJSAI?autoplay=0&theme=dark&loop=0&fs=1&showinfo=1&modestbranding=0&iv_load_policy=1&color=red&autohide=1&disablekb=0&enablejsapi=1&version=3\"><\/iframe><\/span><\/div>\n<p>&nbsp;<\/p>\n<p class=\"green\"><span class=\"ion-info\">More Info<\/span>If you would like to know more about Azure deployments, have a look at the post <a href=\"https:\/\/mohamedradwan.com\/2018\/02\/12\/how-to-deploy-to-azure-using-team-services-release-management\/\">How to deploy to Azure using Team Services Release Management<\/a>. The post describes how Azure deployments are made easy by using Visual Studio Team Services (VSTS) Release Management. You will see a step-by-step tutorial on how to configure and deploy to Azure in Release Management, and, moreover, how to configure an end-to-end pipeline for deploying applications on Azure.<\/p>\n<p>&nbsp;<\/p>\n<h2><a name=\"_Toc511735172\"><\/a>2- Creating Linux VM on Azure and establish a remote connection<\/h2>\n<p>In this video, we will see how to create Linux machine on Azure, we will select Ubuntu server and remote connect to it using Git bash and PuTTY, and we will see how to test that our connection is established using sudo command.<\/p>\n<p>&nbsp;<\/p>\n<div style=\"text-algn:left\"><span style=\"display:inline-block;text-align:center;\"><iframe allow=\"autoplay\" class=\"youtube_embed_iframe\"    allowFullScreen=\"true\" style=\"width:640px; height:385px\" src=\"https:\/\/www.youtube.com\/embed\/C0ecnvmdAuQ?autoplay=0&theme=dark&loop=0&fs=1&showinfo=1&modestbranding=0&iv_load_policy=1&color=red&autohide=1&disablekb=0&enablejsapi=1&version=3\"><\/iframe><\/span><\/div>\n<p>&nbsp;<\/p>\n<h2><a name=\"_Toc511735173\"><\/a>3- Working with Docker on Linux<\/h2>\n<p>In this video, we will start working with container using Docker, so first we will get more familiar with some Linux command like sudo and sudo bash, understanding the different between apt-get and Yum, installing and uninstalling Docker, pull images from Docker-Hub, run container with \u201cdocker run\u201d, list all the running container in the machine by \u201cdocker ps\u201d see all the container from the host machine using process tree or pstree and many others<\/p>\n<p>&nbsp;<\/p>\n<div style=\"text-algn:left\"><span style=\"display:inline-block;text-align:center;\"><iframe allow=\"autoplay\" class=\"youtube_embed_iframe\"    allowFullScreen=\"true\" style=\"width:640px; height:385px\" src=\"https:\/\/www.youtube.com\/embed\/lZIzkOLbBoI?autoplay=0&theme=dark&loop=0&fs=1&showinfo=1&modestbranding=0&iv_load_policy=1&color=red&autohide=1&disablekb=0&enablejsapi=1&version=3\"><\/iframe><\/span><\/div>\n<p>&nbsp;<\/p>\n<p class=\"gray\"><span class=\"ion-video\">Video<\/span>You can see <strong><a href=\"https:\/\/www.youtube.com\/watch?v=vev3Czaa1pA\">this video<\/a><\/strong>, if you would like to find more information about a walkthrough introducing the Release Management and Build Automation using TFS 2017\/2015. Step by step about all process, starting from creating the project, check in the code in the source control, create a build definition and trigger the build, and also create a release pipeline. Learn how to configure properly the build steps, including Copy Files and Publish Build Artifacts. See how to create new release definition, add environments and link to build definition. Afterwards see how to add tasks to the release definition, like Windows Machine File Copy and configure it properly.<\/p>\n<p>&nbsp;<\/p>\n<h2><a name=\"_Toc511735174\"><\/a>4- Creating Windows VM on Azure and working with Docker<\/h2>\n<p>In this video, we will see how to create Windows virtual machine on Azure, I will use Windows 10 machine, connect remotely to it using remote desktop, installing Docker for windows in Linux mode, we will see how to verify that Docker installation succeeded and fix some errors, we will also pull docker hello-world image from Docker-Hub and running a container from it and also pull a SQL Express image as well as nginx, we will also run many containers from the same images and see how we can verify that and many others.<\/p>\n<p>&nbsp;<\/p>\n<div style=\"text-algn:left\"><span style=\"display:inline-block;text-align:center;\"><iframe allow=\"autoplay\" class=\"youtube_embed_iframe\"    allowFullScreen=\"true\" style=\"width:640px; height:385px\" src=\"https:\/\/www.youtube.com\/embed\/W9ImzKuQGQ8?autoplay=0&theme=dark&loop=0&fs=1&showinfo=1&modestbranding=0&iv_load_policy=1&color=red&autohide=1&disablekb=0&enablejsapi=1&version=3\"><\/iframe><\/span><\/div>\n<p>&nbsp;<\/p>\n<h2><strong>The commands that are in the Linux video:<\/strong><\/h2>\n<p>$ sudo<\/p>\n<p>Clean screen<br \/>\n$ Reset or clear<\/p>\n<p>Type docker without sudo and without installing docker<\/p>\n<p>$ docker<\/p>\n<p>Install docker<br \/>\n$ sudo apt-get update &amp;&amp; sudo apt-get install -y docker.io<\/p>\n<p>Now type docker again<br \/>\n$ docker<\/p>\n<p>List all images of docker<br \/>\n$ docker images<\/p>\n<p>\u201cGot permission denied\u201d, now we understand we need to use sudo with every command as we don\u2019t have permission without sudo, so let\u2019s list all images of docker using sudo<\/p>\n<p>List all images of docker<br \/>\n$ sudo docker images<\/p>\n<p>Type sudo bash so we don\u2019t need to type sudo with each command<br \/>\n$ sudo bash<\/p>\n<h2><strong>Type exit to exit from the root user<\/strong><br \/>\n# exit<\/h2>\n<p>sudo allows users to run programs with the security privileges of another user (normally the superuser, or root).<br \/>\nbash starts a new bash shell.<br \/>\nSo, sudo bash starts a new bash shell with the security privilege of root user.<\/p>\n<p>Run hello world image to know we are working correctly<br \/>\n$ sudo docker run hello-world<\/p>\n<p>Uninstall docker then install docker again<br \/>\n$ sudo apt-get remove docker docker-engine docker.io<\/p>\n<p>Try to see docker help<br \/>\n$ sudo docker run &#8211;help<br \/>\nType docker ps (process) to see all running images (no images running)<br \/>\n$ sudo docker ps<\/p>\n<p>Go to Docker hub<br \/>\nhttps:\/\/hub.docker.com\/explore\/<\/p>\n<p>Select nginx image and see the pull command<\/p>\n<p>Pull this image from Docker hub<br \/>\n$ sudo docker pull nginx<br \/>\nList docker images<br \/>\n$ sudo docker images<br \/>\nRun the container of nginx image<br \/>\n$ sudo docker run nginx<\/p>\n<p>From another PuTTy see Docker process, you should see now nginx container is running<br \/>\n$ sudo docker ps<br \/>\nOn the root, access the process tree, you should see the running container and what is inside<br \/>\n$ sudo pstree<\/p>\n<p>Stop the container by type docker stop and give the container ID which you can get from docker images<br \/>\n$ sudo docker stop ee3434341<\/p>\n<h3><strong>The commands that are in the Windows video:<\/strong><\/h3>\n<p>Type docker ps (process) to see all running images<br \/>\ndocker ps<\/p>\n<p>Go to Docker hub<br \/>\nhttps:\/\/hub.docker.com\/explore\/<\/p>\n<p>Select nginx image and see the pull command<\/p>\n<p>Pull this image from Docker hub<br \/>\ndocker pull nginx<br \/>\nList docker images<br \/>\ndocker images<br \/>\nRun the container of nginx image<br \/>\ndocker run nginx<\/p>\n<p>see now nginx container is running<br \/>\ndocker ps<\/p>\n","protected":false},"excerpt":{"rendered":"<p>&nbsp; Introduction Containers Introduction and abstract\u00a0 1- Microservices and Containers &hellip;<\/p>\n<p class=\"read-more\"> <a class=\"ast-button\" href=\"https:\/\/mohamedradwan.com\/2018\/04\/17\/containers-the-perfect-solution-for-running-microservices\/\"> <span class=\"screen-reader-text\">Containers &#8211; The Perfect Solution For Running Microservices<\/span> Read More<\/a><\/p>\n","protected":false},"author":1,"featured_media":8427,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"site-sidebar-layout":"default","site-content-layout":"default","ast-global-header-display":"","ast-banner-title-visibility":"","ast-main-header-display":"","ast-hfb-above-header-display":"","ast-hfb-below-header-display":"","ast-hfb-mobile-header-display":"","site-post-title":"","ast-breadcrumbs-content":"","ast-featured-img":"","footer-sml-layout":"","theme-transparent-header-meta":"","adv-header-id-meta":"","stick-header-meta":"","header-above-stick-meta":"","header-main-stick-meta":"","header-below-stick-meta":"","footnotes":""},"categories":[18,835,883],"tags":[921,851,916,917,918,919,920,845],"_links":{"self":[{"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/posts\/8419"}],"collection":[{"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/comments?post=8419"}],"version-history":[{"count":6,"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/posts\/8419\/revisions"}],"predecessor-version":[{"id":9434,"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/posts\/8419\/revisions\/9434"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/media\/8427"}],"wp:attachment":[{"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/media?parent=8419"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/categories?post=8419"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/tags?post=8419"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
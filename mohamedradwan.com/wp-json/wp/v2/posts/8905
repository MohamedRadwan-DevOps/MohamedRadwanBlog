{"id":8905,"date":"2019-01-24T11:26:19","date_gmt":"2019-01-24T11:26:19","guid":{"rendered":"https:\/\/mohamedradwan.com\/?p=8905"},"modified":"2019-07-17T08:38:40","modified_gmt":"2019-07-17T08:38:40","slug":"azure-devops-add-cicd-azure-pipelines-github","status":"publish","type":"post","link":"https:\/\/mohamedradwan.com\/2019\/01\/24\/azure-devops-add-cicd-azure-pipelines-github\/","title":{"rendered":"Azure DevOps: Add CI\/CD Azure Pipelines + GitHub"},"content":{"rendered":"<p><a href=\"#_Toc500069570\">Introduction<\/a><br \/>\n<a href=\"#_Toc500069571\">How to add CI\/CD pipeline to GitHub repos<\/a><br \/>\n<a href=\"#_Toc500069572\">Conclusion<\/a><\/p>\n<h2><a name=\"_Toc500069570\"><\/a>Introduction<\/h2>\n<p>As Microsoft says, <a href=\"https:\/\/azure.microsoft.com\/en-gb\/services\/devops\/\" target=\"_blank\" rel=\"noopener noreferrer\">Azure DevOps<\/a> is everything that you need, to take an idea and turn that idea into a working piece of software in the hands of your end-users, for any language, targeting any platform. With the introduction of Azure DevOps, Microsoft is offering developers a new continuous integration\/continuous delivery (CI\/CD) service called Azure Pipelines that enables you to continuously build, test, and deploy to any platform or cloud. It has cloud-hosted agents for Linux, macOS, and Windows; powerful workflows with native container support; and flexible deployments to <a href=\"https:\/\/kubernetes.io\/\" target=\"_blank\" rel=\"noopener noreferrer\">Kubernetes<\/a>, VMs, and serverless environments. In this post I am going to show you how to show you how to integrate your GitHub Project With Azure Pipelines.<\/p>\n<p>&nbsp;<\/p>\n<h2><a name=\"_Toc500069571\"><\/a> How to add CI\/CD to GitHub repos<\/h2>\n<p>Let us go back to my <a href=\"https:\/\/github.com\/\" target=\"_blank\" rel=\"noopener noreferrer\">github<\/a> and create a CI\/CD pipeline into Azure pipelines directly from github. First, we need to go to the Marketplace and search for <a href=\"https:\/\/azure.microsoft.com\/en-gb\/services\/devops\/pipelines\/\" target=\"_blank\" rel=\"noopener noreferrer\">Azure pipeline\u2019s<\/a> marketplace extension. Before we start, we need to configure it by clicking on the Configure access link. On the settings page, which will be opened (image 6), I will choose Only select repositories which means that I want to create a CI\/CD pipeline for my specific repository.<\/p>\n<figure id=\"attachment_8893\" aria-describedby=\"caption-attachment-8893\" style=\"width: 1372px\" class=\"wp-caption alignnone\"><img loading=\"lazy\" decoding=\"async\" class=\"size-full wp-image-8893\" src=\"https:\/\/mohamedradwan.com\/wp-content\/uploads\/2019\/01\/Image-6-Configure-repository-access.png\" alt=\"Image 6 - Configure repository access\" width=\"1372\" height=\"774\" srcset=\"https:\/\/mohamedradwan.com\/wp-content\/uploads\/2019\/01\/Image-6-Configure-repository-access.png 1372w, https:\/\/mohamedradwan.com\/wp-content\/uploads\/2019\/01\/Image-6-Configure-repository-access-300x169.png 300w, https:\/\/mohamedradwan.com\/wp-content\/uploads\/2019\/01\/Image-6-Configure-repository-access-768x433.png 768w, https:\/\/mohamedradwan.com\/wp-content\/uploads\/2019\/01\/Image-6-Configure-repository-access-1024x578.png 1024w\" sizes=\"(max-width: 1372px) 100vw, 1372px\" \/><figcaption id=\"caption-attachment-8893\" class=\"wp-caption-text\">Image 6 &#8211; Configure repository access<\/figcaption><\/figure>\n<h3>After saving the changes, we will be back to <strong>Azure DevOps<\/strong><\/h3>\n<p>And after login, it will ask which organization do you want to use and which project. After choosing, it is going to walk us through a wizard to create for us our build pipeline. Then selecting our repository, the technologies that are being used inside the chosen repo will be displayed. Our example repo is holding a Node.js app so it is going to provide a Node.js template so I can easier start using. In addition, it creates immediately a build pipeline written in yaml.<\/p>\n<p>&nbsp;<\/p>\n<figure id=\"attachment_8894\" aria-describedby=\"caption-attachment-8894\" style=\"width: 1372px\" class=\"wp-caption alignnone\"><img loading=\"lazy\" decoding=\"async\" class=\"size-full wp-image-8894\" src=\"https:\/\/mohamedradwan.com\/wp-content\/uploads\/2019\/01\/Image-7-Node.js-template.png\" alt=\"Image 7 - Node.js template\" width=\"1372\" height=\"774\" srcset=\"https:\/\/mohamedradwan.com\/wp-content\/uploads\/2019\/01\/Image-7-Node.js-template.png 1372w, https:\/\/mohamedradwan.com\/wp-content\/uploads\/2019\/01\/Image-7-Node.js-template-300x169.png 300w, https:\/\/mohamedradwan.com\/wp-content\/uploads\/2019\/01\/Image-7-Node.js-template-768x433.png 768w, https:\/\/mohamedradwan.com\/wp-content\/uploads\/2019\/01\/Image-7-Node.js-template-1024x578.png 1024w\" sizes=\"(max-width: 1372px) 100vw, 1372px\" \/><figcaption id=\"caption-attachment-8894\" class=\"wp-caption-text\">Image 7 &#8211; Node.js template<\/figcaption><\/figure>\n<p>&nbsp;<\/p>\n<h3 class=\"blue\"><span class=\"ion-tip\">Tip<\/span> If you would like to know more about this new developer service available on the <a href=\"https:\/\/azure.microsoft.com\/en-gb\/\">Azure<\/a> platform<\/h3>\n<p class=\"blue\">you can have a look at the following post; <a href=\"https:\/\/mohamedradwan.com\/2016\/07\/12\/more-about-azure-devtest-labs\/\">More about Azure DevTest Labs<\/a>. If you prefer a more concise description of the same feature, &#8211; <a href=\"https:\/\/mohamedradwan.com\/2016\/06\/29\/quick-overview-of-azure-devtest-labs\/\">have a look at Quick overview of Azure DevTest Labs<\/a>.<\/p>\n<p>&nbsp;<\/p>\n<p>Let\u2019s now save it and run it. First, this yaml file will be saved in my github repo, then all my source code will be downloaded including the yaml file and then the build will be load with starting the execution of all build steps described in the yaml file. (image 8)<\/p>\n<p>&nbsp;<\/p>\n<figure id=\"attachment_8895\" aria-describedby=\"caption-attachment-8895\" style=\"width: 1372px\" class=\"wp-caption alignnone\"><img loading=\"lazy\" decoding=\"async\" class=\"size-full wp-image-8895\" src=\"https:\/\/mohamedradwan.com\/wp-content\/uploads\/2019\/01\/Image-8-Running-a-build.png\" alt=\"Image 8 - Running a build\" width=\"1372\" height=\"774\" srcset=\"https:\/\/mohamedradwan.com\/wp-content\/uploads\/2019\/01\/Image-8-Running-a-build.png 1372w, https:\/\/mohamedradwan.com\/wp-content\/uploads\/2019\/01\/Image-8-Running-a-build-300x169.png 300w, https:\/\/mohamedradwan.com\/wp-content\/uploads\/2019\/01\/Image-8-Running-a-build-768x433.png 768w, https:\/\/mohamedradwan.com\/wp-content\/uploads\/2019\/01\/Image-8-Running-a-build-1024x578.png 1024w\" sizes=\"(max-width: 1372px) 100vw, 1372px\" \/><figcaption id=\"caption-attachment-8895\" class=\"wp-caption-text\">Image 8 &#8211; Running a build<\/figcaption><\/figure>\n<p>It is doing the same thing as Visual Editor. On the other side, using Visual Editor you can easily customize your tasks. Just click on the plus button and you will see listed a hundreds of tasks that you can just download and start using. If you want to do something that does not exist, go to the marketplace where you can find over 500 build and release tasks that you can just download and start using (image 9). If the thing that you want to do does not exist in the marketplace either, you can always write your own custom task as well in Powershell or node.js.<\/p>\n<p>&nbsp;<\/p>\n<figure id=\"attachment_8896\" aria-describedby=\"caption-attachment-8896\" style=\"width: 1372px\" class=\"wp-caption alignnone\"><img loading=\"lazy\" decoding=\"async\" class=\"size-full wp-image-8896\" src=\"https:\/\/mohamedradwan.com\/wp-content\/uploads\/2019\/01\/Image-9-Tasks-marketplace.png\" alt=\"Image 9 - Tasks marketplace\" width=\"1372\" height=\"774\" srcset=\"https:\/\/mohamedradwan.com\/wp-content\/uploads\/2019\/01\/Image-9-Tasks-marketplace.png 1372w, https:\/\/mohamedradwan.com\/wp-content\/uploads\/2019\/01\/Image-9-Tasks-marketplace-300x169.png 300w, https:\/\/mohamedradwan.com\/wp-content\/uploads\/2019\/01\/Image-9-Tasks-marketplace-768x433.png 768w, https:\/\/mohamedradwan.com\/wp-content\/uploads\/2019\/01\/Image-9-Tasks-marketplace-1024x578.png 1024w\" sizes=\"(max-width: 1372px) 100vw, 1372px\" \/><figcaption id=\"caption-attachment-8896\" class=\"wp-caption-text\">Image 9 &#8211; Tasks marketplace<\/figcaption><\/figure>\n<p>&nbsp;<\/p>\n<p>Other great feature that we can do is customizing the build using yaml file, same as we can customize using Visual Editor. Just click on the Pipeline (step 1 \u2013 Image 10) and View YAML button will be displayed (image 9). On click on the View YAML file (step 2 \u2013 Image 10), a popup will be displayed with the<\/p>\n<h3>YAML code and button Copy to clipboard (step 3 \u2013 Image 10).<\/h3>\n<p>&nbsp;<\/p>\n<figure id=\"attachment_8897\" aria-describedby=\"caption-attachment-8897\" style=\"width: 1372px\" class=\"wp-caption alignnone\"><img loading=\"lazy\" decoding=\"async\" class=\"size-full wp-image-8897\" src=\"https:\/\/mohamedradwan.com\/wp-content\/uploads\/2019\/01\/Image-10-Copy-yaml-code-to-clipboard.png\" alt=\"Image 10 - Copy yaml code to clipboard\" width=\"1372\" height=\"774\" srcset=\"https:\/\/mohamedradwan.com\/wp-content\/uploads\/2019\/01\/Image-10-Copy-yaml-code-to-clipboard.png 1372w, https:\/\/mohamedradwan.com\/wp-content\/uploads\/2019\/01\/Image-10-Copy-yaml-code-to-clipboard-300x169.png 300w, https:\/\/mohamedradwan.com\/wp-content\/uploads\/2019\/01\/Image-10-Copy-yaml-code-to-clipboard-768x433.png 768w, https:\/\/mohamedradwan.com\/wp-content\/uploads\/2019\/01\/Image-10-Copy-yaml-code-to-clipboard-1024x578.png 1024w\" sizes=\"(max-width: 1372px) 100vw, 1372px\" \/><figcaption id=\"caption-attachment-8897\" class=\"wp-caption-text\">Image 10 &#8211; Copy yaml code to clipboard<\/figcaption><\/figure>\n<h3>After we pull our changes from our repo, we can see our azure-pipeline<\/h3>\n<p>yaml file. While customizing it and adding new tasks, we will get autocomplete, syntax highlighting and if we do a control + space we will get IntelliSense which will make our customizing process a lot easier. After we are done with customization, we can upload our code using git add and afterwards git commit commands. Then we need to push the changes into githiub, which automatically will trigger a new build.<\/p>\n<p>&nbsp;<\/p>\n<p>Now we should create a Release pipeline. Just click on the Release button on our build page, which will take us to our Visual Editor. First, it is going to ask us if we want to apply a template. In this demo we are going to use Azure App Service deployment template. Just click on the Apply button and describe what your first stage is going to be. Our first stage is going to be for our staging environment using the name Staging. After we define what environment it is going to be, we can go into that particular staging environment and describe all of the steps we need to take to deploy our application into this particular stage. In our case, we have just one task, so we are going to pick our Azure subscription and select our App service (image 11).<\/p>\n<p>&nbsp;<\/p>\n<figure id=\"attachment_8898\" aria-describedby=\"caption-attachment-8898\" style=\"width: 1372px\" class=\"wp-caption alignnone\"><img loading=\"lazy\" decoding=\"async\" class=\"size-full wp-image-8898\" src=\"https:\/\/mohamedradwan.com\/wp-content\/uploads\/2019\/01\/Image-11-Task-in-staging-environment.png\" alt=\"Image 11 - Task in staging environment\" width=\"1372\" height=\"774\" srcset=\"https:\/\/mohamedradwan.com\/wp-content\/uploads\/2019\/01\/Image-11-Task-in-staging-environment.png 1372w, https:\/\/mohamedradwan.com\/wp-content\/uploads\/2019\/01\/Image-11-Task-in-staging-environment-300x169.png 300w, https:\/\/mohamedradwan.com\/wp-content\/uploads\/2019\/01\/Image-11-Task-in-staging-environment-768x433.png 768w, https:\/\/mohamedradwan.com\/wp-content\/uploads\/2019\/01\/Image-11-Task-in-staging-environment-1024x578.png 1024w\" sizes=\"(max-width: 1372px) 100vw, 1372px\" \/><figcaption id=\"caption-attachment-8898\" class=\"wp-caption-text\">Image 11 &#8211; Task in staging environment<\/figcaption><\/figure>\n<p>&nbsp;<\/p>\n<p class=\"green\"><span class=\"ion-info\">More Info <\/span>If you would like to learn more about what is the story behind containers and what drives or the needs for it, we will know why companies moved from traditional solution architecture to Microservices and how this put containers as the perfect solution for running them, we will get quick intro to clear some definitions, tools and keywords related to this ecosystem, for example, we will understand what is the different between VM.<\/p>\n<h3 class=\"green\">Container and Hyper-V Container<\/h3>\n<p class=\"green\">why we would prefer container over VM and when the VM is better.We will understand the different between container and image and know the life cycle of creating a new image and why I do that. Like adding more layers to the base image, push that to container images registry on the cloud. Then pull that from the registry to anywhere to have a new container. We will understand also different technologies and services around container,<\/p>\n<p class=\"green\">like Docker, Docker Swarm, Kubernetes, Azure Container Services (ACS), Azure Container Registry, etc.- have a look at this post &#8211; have a look at the <a href=\"https:\/\/mohamedradwan.com\/2018\/04\/17\/containers-the-perfect-solution-for-running-microservices\/\"><strong>this post<\/strong><\/a><\/p>\n<p>Next thing we need to do is to define the Approvers. Before and after each environment you can add a set of manual approvers. You can add yourself as an approver, list of people where every single person in the list has to approve before it can flow through the gate, group of people where if one person approves then it will flow through the gate, or you can use a combination of lists and groups as well.<\/p>\n<p>&nbsp;<\/p>\n<h3>Now we need a production environment<\/h3>\n<p>We will just clone our staging environment by clicking on the Clone button, which appears on hover on our environment. After the clone is done, we will change the description into Prod environment and edit the tasks inside. We will change the App service into the one used for our production environment. We can do the same customization here as in the build, we can add various tasks from the Marketplace or write our own.<\/p>\n<p>Next, we need to save it and kick off the release. Going to our pipeline, we can see a Release drop down with two options, Create a release and Create a draft release. We will use Create a release, which will actually grab the latest build and start releasing it through our dev environment, executing the steps that we defined previously. After the deployment is finished on our Staging environment, the approvers needs to approve (image 12).<\/p>\n<p>&nbsp;<\/p>\n<figure id=\"attachment_8899\" aria-describedby=\"caption-attachment-8899\" style=\"width: 1372px\" class=\"wp-caption alignnone\"><img loading=\"lazy\" decoding=\"async\" class=\"size-full wp-image-8899\" src=\"https:\/\/mohamedradwan.com\/wp-content\/uploads\/2019\/01\/Image-12-Approve-the-deployment-on-Staging-environment.png\" alt=\"Image 12 - Approve the deployment on Staging environment\" width=\"1372\" height=\"774\" srcset=\"https:\/\/mohamedradwan.com\/wp-content\/uploads\/2019\/01\/Image-12-Approve-the-deployment-on-Staging-environment.png 1372w, https:\/\/mohamedradwan.com\/wp-content\/uploads\/2019\/01\/Image-12-Approve-the-deployment-on-Staging-environment-300x169.png 300w, https:\/\/mohamedradwan.com\/wp-content\/uploads\/2019\/01\/Image-12-Approve-the-deployment-on-Staging-environment-768x433.png 768w, https:\/\/mohamedradwan.com\/wp-content\/uploads\/2019\/01\/Image-12-Approve-the-deployment-on-Staging-environment-1024x578.png 1024w\" sizes=\"(max-width: 1372px) 100vw, 1372px\" \/><figcaption id=\"caption-attachment-8899\" class=\"wp-caption-text\">Image 12 &#8211; Approve the deployment on Staging environment<\/figcaption><\/figure>\n<p>&nbsp;<\/p>\n<p>After approve is done, it is going to flow into our Production environment. Then we have our application deployed on our Production environment. We have just simply created a full CI\/CD pipeline. Which took our code from github all the way out into production.<\/p>\n<p>&nbsp;<\/p>\n<h2><a name=\"_Toc500069572\"><\/a>Conclusion<\/h2>\n<p>Azure DevOps is the ultimate DevOps tool. Which makes so simple to go from nothing to full CI\/CD pipeline to any language. Targeting any platform, from your code in your repository, deploying to whenever you need to be deployed. It could be deployed on Azure, behind your firewall, or in front of your firewall. Any language targeting any platform, simple as that. If you have an open source project you will get all of this for free. Getting 10 parallel pipelines out of the box, and if you need more just ask. Now we can easily do GitHub integration and easily create CI\/CD pipelines for our code in GitHub using Azure Pipelines.<\/p>\n<p>&nbsp;<\/p>\n<h3 class=\"gray\">\u00a0You can see <strong><a href=\"https:\/\/www.youtube.com\/watch?v=uGAcWLnSU0A\">this video<\/a><\/strong><\/h3>\n<p class=\"gray\">If you would like to find more information about how to get started with Release Management and its advantages. See how to create a build definition using CI\/CD Tools for VSTS Extensions. (I will be using Package Extension and Publish Artifact tasks). And also using DevOps-VSTS-POC trigger in order to enable CI. All of that in order to be able to publish, share, install and query versions. You will see how to create release definition, choose an artifact and configure source for the artifact and default version. See how to create different environments or clone the existing one. In my case I am going to create QA, Preproduction and Production environment. Each with one phrase and one task. See also how to configure Publish Extension task for each environment .See an end-to-end continuous delivery pipeline using VSTS extension with Build and Release Management.<\/p>\n<p>&nbsp;<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Introduction How to add CI\/CD pipeline to GitHub repos Conclusion &hellip;<\/p>\n<p class=\"read-more\"> <a class=\"ast-button\" href=\"https:\/\/mohamedradwan.com\/2019\/01\/24\/azure-devops-add-cicd-azure-pipelines-github\/\"> <span class=\"screen-reader-text\">Azure DevOps: Add CI\/CD Azure Pipelines + GitHub<\/span> Read More<\/a><\/p>\n","protected":false},"author":1,"featured_media":9135,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"site-sidebar-layout":"default","site-content-layout":"default","ast-global-header-display":"","ast-banner-title-visibility":"","ast-main-header-display":"","ast-hfb-above-header-display":"","ast-hfb-below-header-display":"","ast-hfb-mobile-header-display":"","site-post-title":"","ast-breadcrumbs-content":"","ast-featured-img":"","footer-sml-layout":"","theme-transparent-header-meta":"","adv-header-id-meta":"","stick-header-meta":"","header-above-stick-meta":"","header-main-stick-meta":"","header-below-stick-meta":"","footnotes":""},"categories":[16,23,24],"tags":[960,963,909,950],"_links":{"self":[{"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/posts\/8905"}],"collection":[{"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/comments?post=8905"}],"version-history":[{"count":5,"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/posts\/8905\/revisions"}],"predecessor-version":[{"id":9566,"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/posts\/8905\/revisions\/9566"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/media\/9135"}],"wp:attachment":[{"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/media?parent=8905"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/categories?post=8905"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/tags?post=8905"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
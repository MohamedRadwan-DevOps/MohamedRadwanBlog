{"id":4618,"date":"2014-09-15T08:31:28","date_gmt":"2014-09-15T08:31:28","guid":{"rendered":"https:\/\/mohamedradwan.com\/?p=4618"},"modified":"2016-05-24T06:40:29","modified_gmt":"2016-05-24T06:40:29","slug":"quick-overview-about-how-and-why-to-use-nlog","status":"publish","type":"post","link":"https:\/\/mohamedradwan.com\/2014\/09\/15\/quick-overview-about-how-and-why-to-use-nlog\/","title":{"rendered":"Quick overview about how and why to use NLog"},"content":{"rendered":"<p>I needed to use a Loggin Framework, every time using loggin frameworks, it ends up with wasting some\u00a0hours, because the\u00a0configuration that makes me feel it&#8217;s better to create my own :-), I already started to create a small one but I found this is exactly re-enventing\u00a0the wheel so I decide to give some times for different Loggin frameworks&#8217;s configurations.<\/p>\n<p><strong>Log4Net<\/strong>, I used that one because I found it has been used for\u00a0some projects we have,\u00a0it took all the day for fixing up some configurations errors that I found at the end\u00a0they are\u00a0bugs, I needed to make some workarounds\u00a0to fix them. I don&#8217;t recommended\u00a0anyone to use this framework\u00a0as it not updated from long time ago (2006).<\/p>\n<p><strong>NLog<\/strong>, it was very simple, very nice &#8230;I decide to summarize my overview about it:<\/p>\n<p>Here are the steps to use NLog:<\/p>\n<ul>\n<li>Add reference to NLog framework using NUget (<strong>PM&gt;Install-Package NLog<\/strong>)<\/li>\n<li>Add config file using NUget (<strong>PM&gt; Install-Package NLog.Config<\/strong>)<\/li>\n<li>Add at least one target in the <strong>Target<\/strong> section in the config file<\/li>\n<li>Add at least one rule in the <strong>Rules<\/strong> section that use any target from the <strong>Target<\/strong> section<\/li>\n<li>Create an instance of the Logger class\u00a0inside the class you want to use NLog\n<p>[sourcecode language=&#8221;csharp&#8221;]\u00a0private static readonly Logger Logger = LogManager.GetCurrentClassLogger() [\/sourcecode]<\/p>\n<\/li>\n<li>Call any method of Logger object (Log, Trace, Debug, etc..)<\/li>\n<\/ul>\n<p><strong>Notes<\/strong>:<\/p>\n<ul>\n<li><a title=\"NLog tutorial\" href=\"https:\/\/github.com\/NLog\/NLog\/wiki\/Tutorial\" target=\"_blank\">NLog tutorial<\/a><\/li>\n<li><a href=\"https:\/\/github.com\/NLog\/NLog\/wiki\/Targets\" target=\"_blank\">All Target types<\/a><\/li>\n<li><a href=\"https:\/\/github.com\/NLog\/NLog\/wiki\/Layout-renderers\" target=\"_blank\">All Layouts Renders<\/a><\/li>\n<li>we can make combinations for target and rules for e.x,\n<ul>\n<li>We can use one target for each rule&#8212;&gt; Error\u00a0in Event Log, Info in a File<\/li>\n<li>We can use multiple rules for\u00a0the same target &#8212;&gt; Error and Info in the same File<\/li>\n<li>We can use multiple targets for the same rule &#8212;&gt; Error and Info in both Event Log and in the same File or even in many Files<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<p>&nbsp;<\/p>\n<p>Here is the config file with some notes and description of some elements and attributes<\/p>\n<p>[code language=&#8221;xml&#8221;]<\/p>\n<p>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;<br \/>\n&lt;nlog xmlns=&quot;http:\/\/www.nlog-project.org\/schemas\/NLog.xsd&quot;<br \/>\n xmlns:xsi=&quot;http:\/\/www.w3.org\/2001\/XMLSchema-instance&quot;&gt;<\/p>\n<p> &lt;!&#8211;<br \/>\n See https:\/\/github.com\/nlog\/nlog\/wiki\/Configuration-file<br \/>\n for information on customizing logging rules and outputs.<br \/>\n &#8211;&gt;<br \/>\n &lt;targets&gt;<br \/>\n &lt;target name=&quot;logfile&quot; xsi:type=&quot;File&quot; fileName=&quot;file.txt&quot; \/&gt;<br \/>\n &lt;target name=&quot;console&quot; xsi:type=&quot;Console&quot; \/&gt;<\/p>\n<p> &lt;target name=&quot;errors&quot; xsi:type=&quot;File&quot; fileName=&quot;ErrorLog.txt&quot;<br \/>\n layout=&quot;Caller: ${callsite:className=true:fileName=true:includeSourcePath=true<br \/>\n :methodName=true} ${newline} LogDirectory: ${nlogdir}<br \/>\n ${newline} Process: ${processname} ${newline} ${longdate}<br \/>\n ${message} ${exception:format=tostring} &quot;\/&gt;<\/p>\n<p> &lt;!&#8211; add your targets here &#8211;&gt;<\/p>\n<p> &lt;!&#8211;<br \/>\n &lt;target xsi:type=&quot;File&quot; name=&quot;f&quot; fileName=&quot;${basedir}\/logs\/${shortdate}.log&quot;<br \/>\n layout=&quot;${longdate} ${uppercase:${level}} ${message}&quot; \/&gt;<\/p>\n<p>name &gt;&gt;&gt;&gt;&gt;<br \/>\nName of the target to be used in the Rules section<\/p>\n<p>xsi:type &gt;&gt;&gt;&gt;&gt;<br \/>\nThere are many types e.x, File, EventLog, Database<br \/>\nMail, Messagebox and many others<br \/>\nThe list of all types: https:\/\/github.com\/NLog\/NLog\/wiki\/Targets<\/p>\n<p>fileName &gt;&gt;&gt;&gt;&gt;<br \/>\nIf the type is a file then we need to provide a file name,<br \/>\nThe the default is the place where the program executed but<br \/>\nwe can put any path and it support NUC (Network) too \\machinesharedFolder<\/p>\n<p>layout &gt;&gt;&gt;&gt;&gt;<br \/>\nHow and what data we want to include in the logging message,<br \/>\nIt has many place holders that start with &quot;$&quot; each placeholder has<br \/>\nitsown attributes E.x: ${processname}, ${newline}, {message}, we<br \/>\ncan include string between the placeholders e.x: $(processname} this<br \/>\nis string ${message},the list of<br \/>\nall layouts: https:\/\/github.com\/NLog\/NLog\/wiki\/Layout-renderers<\/p>\n<p> &#8211;&gt;<\/p>\n<p> &lt;\/targets&gt;<\/p>\n<p> &lt;rules&gt;<\/p>\n<p> &lt;logger name=&quot;*&quot; minlevel=&quot;Trace&quot; writeTo=&quot;logfile&quot; \/&gt;<br \/>\n &lt;logger name=&quot;*&quot; minlevel=&quot;Trace&quot; writeTo=&quot;errors&quot; \/&gt;<br \/>\n &lt;logger name=&quot;*&quot; minlevel=&quot;Info&quot; writeTo=&quot;console&quot; \/&gt;<\/p>\n<p> &lt;!&#8211; add your logging rules here &#8211;&gt;<\/p>\n<p> &lt;!&#8211;<br \/>\n &lt;logger name=&quot;*&quot; minlevel=&quot;Trace&quot; writeTo=&quot;f&quot; \/&gt;<\/p>\n<p>name &gt;&gt;&gt;&gt;&gt;<br \/>\nName of the Class that has the Logger object,<br \/>\n* means all classes<\/p>\n<p>minlevel &gt;&gt;&gt;&gt;&gt;<br \/>\nTrace, Debug, Info, Warn, Error, Fatal<br \/>\nIf we put the Trace this will show all of them<br \/>\nIf we put Info, this will show (Info, Warn, Error, Fatal)<\/p>\n<p>writeTo &gt;&gt;&gt;&gt;&gt;<br \/>\nTarget name, pick it from the Target section<\/p>\n<p> &#8211;&gt;<br \/>\n &lt;\/rules&gt;<br \/>\n&lt;\/nlog&gt;<br \/>\n[\/code]<\/p>\n<p>&nbsp;<\/p>\n","protected":false},"excerpt":{"rendered":"<p>I needed to use a Loggin Framework, every time using &hellip;<\/p>\n<p class=\"read-more\"> <a class=\"ast-button\" href=\"https:\/\/mohamedradwan.com\/2014\/09\/15\/quick-overview-about-how-and-why-to-use-nlog\/\"> <span class=\"screen-reader-text\">Quick overview about how and why to use NLog<\/span> Read More<\/a><\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"site-sidebar-layout":"default","site-content-layout":"default","ast-global-header-display":"","ast-banner-title-visibility":"","ast-main-header-display":"","ast-hfb-above-header-display":"","ast-hfb-below-header-display":"","ast-hfb-mobile-header-display":"","site-post-title":"","ast-breadcrumbs-content":"","ast-featured-img":"","footer-sml-layout":"","theme-transparent-header-meta":"","adv-header-id-meta":"","stick-header-meta":"","header-above-stick-meta":"","header-main-stick-meta":"","header-below-stick-meta":"","footnotes":""},"categories":[16,27],"tags":[],"_links":{"self":[{"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/posts\/4618"}],"collection":[{"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/comments?post=4618"}],"version-history":[{"count":1,"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/posts\/4618\/revisions"}],"predecessor-version":[{"id":6024,"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/posts\/4618\/revisions\/6024"}],"wp:attachment":[{"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/media?parent=4618"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/categories?post=4618"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/tags?post=4618"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
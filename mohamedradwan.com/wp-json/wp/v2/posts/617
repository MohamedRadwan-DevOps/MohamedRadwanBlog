{"id":617,"date":"2011-01-15T03:51:08","date_gmt":"2011-01-15T03:51:08","guid":{"rendered":"https:\/\/mohamedradwan.com\/?p=543"},"modified":"2017-08-30T06:24:11","modified_gmt":"2017-08-30T06:24:11","slug":"mvp-design-pattern-for-web-application-vs-mvc-with-example","status":"publish","type":"post","link":"https:\/\/mohamedradwan.com\/2011\/01\/15\/mvp-design-pattern-for-web-application-vs-mvc-with-example\/","title":{"rendered":"MVP design pattern for Web application vs. MVC, with Example"},"content":{"rendered":"<hr \/>\n<p>I start reading about MVP design pattern in web application and I found it very useful, but I get out of one main important concept, the MVP pattern is very good in web application if we working with ASP.NET Web Forms because it will make the model testable but if we working with MVC it&#8217;s already a testable and more and more it can be TDD (Test driven Development) model, of course this not the only reason for MVP or MVC they also enhance the maintainability of the web application and there are many other reasons for using them.<\/p>\n<p>I read many articles about MVP but most of my writing come from <a title=\"Source\" href=\"http:\/\/blogs.msdn.com\/b\/jowardel\/archive\/2008\/09\/09\/using-the-model-view-presenter-mvp-design-pattern-to-enable-presentational-interoperability-and-increased-testability.aspx?ocid=soc-n-eg-elite--MRadwan\" target=\"_blank\">dot net miscellany<\/a>, I create a Web form application that has MVP pattern that can download from the following link download<\/p>\n<p><a href=\"https:\/\/mohamedradwan.com\/wp-content\/uploads\/2017\/08\/MVP.zip\"><img loading=\"lazy\" decoding=\"async\" class=\"alignnone wp-image-7151 size-full\" src=\"https:\/\/mohamedradwan.com\/wp-content\/uploads\/2011\/01\/download.jpg\" alt=\"Download\" width=\"232\" height=\"188\" \/><\/a><\/p>\n<p>So let&#8217;s start what is the MVP pattern?<\/p>\n<p><a href=\"https:\/\/mohamedradwan.com\/wp-content\/uploads\/2011\/01\/MVP-1.png\"><img loading=\"lazy\" decoding=\"async\" class=\"alignnone size-large wp-image-7155\" src=\"https:\/\/mohamedradwan.com\/wp-content\/uploads\/2011\/01\/MVP-1-1024x673.png\" alt=\"MVP\" width=\"760\" height=\"499\" srcset=\"https:\/\/mohamedradwan.com\/wp-content\/uploads\/2011\/01\/MVP-1-1024x673.png 1024w, https:\/\/mohamedradwan.com\/wp-content\/uploads\/2011\/01\/MVP-1-300x197.png 300w, https:\/\/mohamedradwan.com\/wp-content\/uploads\/2011\/01\/MVP-1-768x505.png 768w, https:\/\/mohamedradwan.com\/wp-content\/uploads\/2011\/01\/MVP-1.png 1061w\" sizes=\"(max-width: 760px) 100vw, 760px\" \/><\/a><\/p>\n<p>Model View Presenter (MVP) is a software design pattern which essentially isolates the user interface from the business logic through the presenter. MVP is derived from the Model View Controller (MVC) pattern, by Martin Fowler.<br \/>\nThe principal behind the MVP pattern is that an implementing application should be split into three core components; Model, View and Presenter:<br \/>\nThe main concept of the MVP is that the UI is separated from the business logic and this could have many advantages as we will see<\/p>\n<ul>\n<li>The Model component encapsulates all the Data in the application. This may be a database transaction or a call to a web service, or any persistence or even volatile data<\/li>\n<\/ul>\n<ul>\n<li>The View component is the Presentation layer (User Interface); this may be a standard Win Forms client, an ASP.NET Web Form or Web part or Mobile client. In the MVP pattern, it will handle the rendering and accepting user input only.<\/li>\n<\/ul>\n<ul>\n<li>The Presenter is controlling of the application\u2019s actions. For example a sample operation would involve; taking user input from the View, invoking operations on the Model and if needed, setting data in the View to indicate the operations result and so on.<\/li>\n<\/ul>\n<p>The advantages of MVP pattern are:<\/p>\n<ul>\n<li>Isolation of User Interface from Business logic<\/li>\n<li>The ability to change the UI from Web to Window or Mobile is very easy<\/li>\n<li>Ability to test all code in the solution for all projects (excluding visual presentation and interaction)<\/li>\n<\/ul>\n<p>We can see here that we can separate the physical class of the MVP in separate assemblies like the following architecture and layer diagram<\/p>\n<p><a href=\"https:\/\/mohamedradwan.com\/wp-content\/uploads\/2011\/01\/MVP-Architecture.png\"><img loading=\"lazy\" decoding=\"async\" class=\"alignnone size-full wp-image-7156\" src=\"https:\/\/mohamedradwan.com\/wp-content\/uploads\/2011\/01\/MVP-Architecture.png\" alt=\"MVP Architecture\" width=\"619\" height=\"378\" srcset=\"https:\/\/mohamedradwan.com\/wp-content\/uploads\/2011\/01\/MVP-Architecture.png 619w, https:\/\/mohamedradwan.com\/wp-content\/uploads\/2011\/01\/MVP-Architecture-300x183.png 300w\" sizes=\"(max-width: 619px) 100vw, 619px\" \/><\/a><\/p>\n<p>You can download the project as I mention before from the above download link<\/p>\n<p>For more information you can read the following post <a title=\"MSDN\" href=\"http:\/\/msdn.microsoft.com\/en-us\/magazine\/cc188690.aspx\" target=\"_blank\">MSDN<\/a><\/p>\n<p>Thanks<\/p>\n","protected":false},"excerpt":{"rendered":"<p>I start reading about MVP design pattern in web application &hellip;<\/p>\n<p class=\"read-more\"> <a class=\"ast-button\" href=\"https:\/\/mohamedradwan.com\/2011\/01\/15\/mvp-design-pattern-for-web-application-vs-mvc-with-example\/\"> <span class=\"screen-reader-text\">MVP design pattern for Web application vs. MVC, with Example<\/span> Read More<\/a><\/p>\n","protected":false},"author":2,"featured_media":7151,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"site-sidebar-layout":"default","site-content-layout":"default","ast-global-header-display":"","ast-banner-title-visibility":"","ast-main-header-display":"","ast-hfb-above-header-display":"","ast-hfb-below-header-display":"","ast-hfb-mobile-header-display":"","site-post-title":"","ast-breadcrumbs-content":"","ast-featured-img":"","footer-sml-layout":"","theme-transparent-header-meta":"","adv-header-id-meta":"","stick-header-meta":"","header-above-stick-meta":"","header-main-stick-meta":"","header-below-stick-meta":"","footnotes":""},"categories":[16,21,31],"tags":[426],"_links":{"self":[{"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/posts\/617"}],"collection":[{"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/users\/2"}],"replies":[{"embeddable":true,"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/comments?post=617"}],"version-history":[{"count":2,"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/posts\/617\/revisions"}],"predecessor-version":[{"id":7157,"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/posts\/617\/revisions\/7157"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/media\/7151"}],"wp:attachment":[{"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/media?parent=617"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/categories?post=617"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/tags?post=617"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
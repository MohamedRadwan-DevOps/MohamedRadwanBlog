{"id":1011,"date":"2011-11-08T00:18:28","date_gmt":"2011-11-08T00:18:28","guid":{"rendered":"https:\/\/mohamedradwan.com\/?p=1011"},"modified":"2017-08-22T22:22:11","modified_gmt":"2017-08-22T22:22:11","slug":"new-feature-to-generate-test-data-with-fluent-api-in-devmagicfake","status":"publish","type":"post","link":"https:\/\/mohamedradwan.com\/2011\/11\/08\/new-feature-to-generate-test-data-with-fluent-api-in-devmagicfake\/","title":{"rendered":"New Feature to generate test data with fluent API in DevMagicFake"},"content":{"rendered":"<hr \/>\n<p>Hello,<\/p>\n<p>I received very good\u00a0suggestions and feedback\u00a0from <a title=\"Maartenballiaw\" href=\"http:\/\/blog.maartenballiauw.be\/\" target=\"_blank\">Maatren Balliauw<\/a>, really thanks Maarten for your\u00a0valuable\u00a0opinions and ideas\u00a0 \ud83d\ude42 the most important\u00a0suggestion\u00a0was about making a fluent\u00a0interface\u00a0for my\u00a0framework\u00a0(DevMagicFake), of course there are data generation but with file configuration only, I planned to support better way but really Maatern give me very good\u00a0opinions,\u00a0 And now I complete this feature and here how it will work<\/p>\n<p>When we work we need\u00a0test data for testing our application, we need\u00a0generator for our classes so we can perform the desired business scenarios, now we can use DevMagicFake for\u00a0data generation in our domain model using fluent API\u00a0instead\u00a0of file configuration.<\/p>\n<p><span style=\"color: #ff0000;\">Note: this feature not released yet, so if anyone need to use it, he will need to download the latest\u00a0reversion\u00a0of the\u00a0project\u00a0from CodePlex and just make a local build on his machine.<\/span><\/p>\n<p>So if we write the following code<\/p>\n<p><a href=\"https:\/\/mohamedradwan.com\/wp-content\/uploads\/2011\/11\/FluentCode.png\"><img loading=\"lazy\" decoding=\"async\" class=\"alignnone size-full wp-image-7085\" src=\"https:\/\/mohamedradwan.com\/wp-content\/uploads\/2011\/11\/FluentCode.png\" alt=\"\" width=\"813\" height=\"258\" srcset=\"https:\/\/mohamedradwan.com\/wp-content\/uploads\/2011\/11\/FluentCode.png 813w, https:\/\/mohamedradwan.com\/wp-content\/uploads\/2011\/11\/FluentCode-300x95.png 300w, https:\/\/mohamedradwan.com\/wp-content\/uploads\/2011\/11\/FluentCode-768x244.png 768w\" sizes=\"(max-width: 813px) 100vw, 813px\" \/><\/a><\/p>\n<p>So this will generate data as the following:<\/p>\n<p><a href=\"https:\/\/mohamedradwan.com\/wp-content\/uploads\/2011\/11\/FluentAPIResult.png\"><img loading=\"lazy\" decoding=\"async\" class=\"alignnone size-full wp-image-7086\" src=\"https:\/\/mohamedradwan.com\/wp-content\/uploads\/2011\/11\/FluentAPIResult.png\" alt=\"FluentAPIResult\" width=\"589\" height=\"378\" srcset=\"https:\/\/mohamedradwan.com\/wp-content\/uploads\/2011\/11\/FluentAPIResult.png 589w, https:\/\/mohamedradwan.com\/wp-content\/uploads\/2011\/11\/FluentAPIResult-300x193.png 300w\" sizes=\"(max-width: 589px) 100vw, 589px\" \/><\/a><\/p>\n<p>The rules can be set using the following methods:<\/p>\n<p><a href=\"https:\/\/mohamedradwan.com\/wp-content\/uploads\/2011\/11\/FluentAPI.png\"><img loading=\"lazy\" decoding=\"async\" class=\"alignnone size-full wp-image-7087\" src=\"https:\/\/mohamedradwan.com\/wp-content\/uploads\/2011\/11\/FluentAPI.png\" alt=\"FluentAPI\" width=\"800\" height=\"146\" srcset=\"https:\/\/mohamedradwan.com\/wp-content\/uploads\/2011\/11\/FluentAPI.png 800w, https:\/\/mohamedradwan.com\/wp-content\/uploads\/2011\/11\/FluentAPI-300x55.png 300w, https:\/\/mohamedradwan.com\/wp-content\/uploads\/2011\/11\/FluentAPI-768x140.png 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" \/><\/a><\/p>\n<p>Now there are 3 methods for\u00a0putting\u00a0rules for your data generation<\/p>\n<ul>\n<li>RuleUsesClassProperty( )<\/li>\n<li>RuleUsesDataType( )<\/li>\n<li>RuleUsesPropertyOnly( )<\/li>\n<\/ul>\n<p>Each method can use one of the 4 types of generation of the following<\/p>\n<ul>\n<li>GeneratFromList()<\/li>\n<li>GenerateFromRange( )<\/li>\n<li>GenerateFromValue( )<\/li>\n<li>GenerateFromRandom( )<\/li>\n<\/ul>\n<p>Finally you can controller the null percentage if needed<\/p>\n<ul>\n<li>NullPercentage( )<\/li>\n<\/ul>\n<p>And\u00a0remember\u00a0the data generation is a\u00a0secondary\u00a0goal of DevMagicFake , the main goal is to provide a way of real repository for your business classes in\u00a0memory\u00a0with all the methods that you may need to stop\u00a0writing\u00a0any faking code and be productive and working\u00a0real\u00a0TDD (Test Driven Development ) and (Test Driven Design)<\/p>\n<p>I hope to get more feedback for improvement and new feature that will really help.<\/p>\n<p>Thanks<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Hello, I received very good\u00a0suggestions and feedback\u00a0from Maatren Balliauw, really &hellip;<\/p>\n<p class=\"read-more\"> <a class=\"ast-button\" href=\"https:\/\/mohamedradwan.com\/2011\/11\/08\/new-feature-to-generate-test-data-with-fluent-api-in-devmagicfake\/\"> <span class=\"screen-reader-text\">New Feature to generate test data with fluent API in DevMagicFake<\/span> Read More<\/a><\/p>\n","protected":false},"author":2,"featured_media":7085,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"site-sidebar-layout":"default","site-content-layout":"default","ast-global-header-display":"","ast-banner-title-visibility":"","ast-main-header-display":"","ast-hfb-above-header-display":"","ast-hfb-below-header-display":"","ast-hfb-mobile-header-display":"","site-post-title":"","ast-breadcrumbs-content":"","ast-featured-img":"","footer-sml-layout":"","theme-transparent-header-meta":"","adv-header-id-meta":"","stick-header-meta":"","header-above-stick-meta":"","header-main-stick-meta":"","header-below-stick-meta":"","footnotes":""},"categories":[16,22,48],"tags":[],"_links":{"self":[{"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/posts\/1011"}],"collection":[{"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/users\/2"}],"replies":[{"embeddable":true,"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/comments?post=1011"}],"version-history":[{"count":2,"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/posts\/1011\/revisions"}],"predecessor-version":[{"id":7089,"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/posts\/1011\/revisions\/7089"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/media\/7085"}],"wp:attachment":[{"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/media?parent=1011"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/categories?post=1011"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/mohamedradwan.com\/wp-json\/wp\/v2\/tags?post=1011"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}